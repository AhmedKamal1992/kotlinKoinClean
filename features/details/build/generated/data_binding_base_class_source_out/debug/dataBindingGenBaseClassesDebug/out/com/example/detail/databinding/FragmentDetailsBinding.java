// Generated by data binding compiler. Do not edit!
package com.example.detail.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import com.example.detail.R;
import com.example.detail.presentation.UserDetailsViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentDetailsBinding extends ViewDataBinding {
  @NonNull
  public final ImageView fragmentDetailAvatar;

  @NonNull
  public final TextView fragmentDetailBlog;

  @NonNull
  public final TextView fragmentDetailCompany;

  @NonNull
  public final TextView fragmentDetailName;

  @NonNull
  public final SwipeRefreshLayout fragmentDetailRootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imageView5;

  @Bindable
  protected UserDetailsViewModel mViewModel;

  protected FragmentDetailsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView fragmentDetailAvatar, TextView fragmentDetailBlog, TextView fragmentDetailCompany,
      TextView fragmentDetailName, SwipeRefreshLayout fragmentDetailRootView, ImageView imageView,
      ImageView imageView3, ImageView imageView4, ImageView imageView5) {
    super(_bindingComponent, _root, _localFieldCount);
    this.fragmentDetailAvatar = fragmentDetailAvatar;
    this.fragmentDetailBlog = fragmentDetailBlog;
    this.fragmentDetailCompany = fragmentDetailCompany;
    this.fragmentDetailName = fragmentDetailName;
    this.fragmentDetailRootView = fragmentDetailRootView;
    this.imageView = imageView;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.imageView5 = imageView5;
  }

  public abstract void setViewModel(@Nullable UserDetailsViewModel viewModel);

  @Nullable
  public UserDetailsViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDetailsBinding>inflateInternal(inflater, R.layout.fragment_details, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDetailsBinding>inflateInternal(inflater, R.layout.fragment_details, null, false, component);
  }

  public static FragmentDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDetailsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentDetailsBinding)bind(component, view, R.layout.fragment_details);
  }
}
